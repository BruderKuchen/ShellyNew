version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: srmonitor
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  core:
    build:
      context: ./core
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - app-network

  simulator:
    build:
      context: ./simulator
    ports:
      - "8080:80"
    networks:
      - app-network

  agent:
    build:
      context: ./agent
    environment:
      SHELLY_IP: 172.20.10.3
      CORE_ENDPOINT: http://core:8000/api/shelly
    depends_on:
      - core
      - simulator
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend/localhost+2.pem:/app/localhost+2.pem:ro
      - ./frontend/localhost+2-key.pem:/app/localhost+2-key.pem:ro
    depends_on:
      - core
    ports:
      - "3000:3000"
    command: >
      npx serve dist
        -l 3000
        --ssl-cert /app/localhost+2.pem
        --ssl-key /app/localhost+2-key.pem
    networks:
      - app-network

  ticket-service:
    build:
      context: ./ticket-service
    # Zertifikate mounten:
    volumes:
      - ./frontend/localhost+2.pem:/app/localhost+2.pem:ro
      - ./frontend/localhost+2-key.pem:/app/localhost+2-key.pem:ro
    ports:
      - "5000:5000"
    # Hier wird SSL aktiviert â€“ passe den Befehl ggf. an dein Framework an:
    command: >
      flask run
        --host=0.0.0.0
        --port=5000
        --cert=/app/localhost+2.pem
        --key=/app/localhost+2-key.pem
    networks:
      - app-network

volumes:
  db-data:
  ticket-data:

networks:
  app-network:
    driver: bridge
